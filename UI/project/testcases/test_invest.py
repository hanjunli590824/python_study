# -*- coding: utf-8 -*-
#@Time      : 2020/5/30 18:39
#@Author    : hanchuang
#@Email     : 13032178760@163.com
#@File      : test_invest.py
"""
独立的测试账号

正常用例
前提条件：
###############尽量不要依赖环境数据##################
1、用户已登录
2、有能够投资的标--如果没有标，则先加标--接口的方式加标
3.用户有余额可以投资
    1.充很多钱
    2.接口方式：查询当前用户的余额，如果够，不用充值，否则，充值

步骤：
1.在首页选标--不根据标名，根据抢投标，默认第一个标
2.标页面--获取投资前的用户余额
3.标页面--输入投资金额，点击投资按钮
4.标页面--点击投资成功的弹出框--查看并激活，进入个人页面

断言：
钱--投资后的金额，是不是少了投资的量
1.个人页面--获取投资后的金额
2.投资金额=投资前的金额-投资后的金额
3.投资记录对不对


异常用例：非常好创造  环境，非常好写的

异常用例：--这些比较麻烦或者执行以后会影响到其他用例的用例可手工执行，不一定非要转化成自动化用例
1.全投操作--标的可投金额>个人金额
2.投资金额>标的可投金额

import unittest
class testinvest(unitest.testcase):

    def setup(self):
        pass

    def teardown(self):
        pass

    def test_invest_success(self):
        步骤：
        1.在首页选标--不根据标名，根据抢投标，默认第一个标
        2.标页面--获取投资前的用户余额
        3.标页面--输入投资金额，点击投资按钮
        4.标页面--点击投资成功的弹出框--查看并激活，进入个人页面

        断言：
        钱--投资后的金额，是不是少了投资的量
        1.个人页面--获取投资后的金额
        2.投资金额=投资前的金额-投资后的金额
        3.投资记录对不对

    def test_invest_failed_no100(self):
        pass

    def test_invest_failed_no10(self):
        pass














"""
